name: Tests

on:
    push:
    pull_request:
    schedule:
        - cron: '0 */12 * * *'

jobs:
    test:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]')"

        strategy:
            fail-fast: false
            matrix:
                laravel: [7.*]
                php: [7.2, 7.3]
                service: ['mysql:8', 'mysql:5.7', mariadb]

                include:
                    - service: 'mysql:8'
                      db: MySQL8
                    - service: 'mysql:5.7'
                      db: MySQL5
                    - service: mariadb
                      db: MariaDB

        services:
            mysql:
                image: ${{ matrix.service }}
                env:
                    MYSQL_DATABASE: testing
                    MYSQL_USER: testing
                    MYSQL_PASSWORD: testing
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
                    MYSQL_ROOT_HOST: "%"
                ports:
                    - 13306:3306

        name: 'PHP ${{ matrix.php }} / Laravel: ${{ matrix.laravel }} / ${{ matrix.db }}'


        env:
            COMPOSER_ARGS: ''

        steps:
            - uses: actions/checkout@master

            - name: Select PHP version
              uses: shivammathur/setup-php@master
              with:
                  php-version: '${{ matrix.php }}'

            - name: Start required services
              run: sudo systemctl start mysql

            - name: Create MySQL User
              run: mysql -uroot -proot -e "create user 'testing'@'%' identified by 'testing';" --port 13306

            - name: Create MySQL Database
              run: mysql -uroot -proot -e "create database testing;" --port 13306

            - name: Grant MySQL permissions
              run: mysql -uroot -proot -e "grant all privileges on *.* to 'testing'@'%' with grant option;" --port 13306

            - name: Install Version Specific Dependencies
              run: composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update ${{ env.COMPOSER_ARGS }}

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache Composer Downloads
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-
                      ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}-
                      ${{ runner.os }}-composer-${{ matrix.php }}-
                      ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer update --no-ansi --no-interaction ${{ env.COMPOSER_ARGS }}

            - name: Run tests
              run: DB_CONNECTION=mysql DB_HOST=mariadb TENANCY_SYSTEM_CONNECTION_NAME=mysql ./vendor/bin/phpunit -c ci.phpunit.xml
              env:
                  TENANCY_DB: testing
                  TENANCY_USERNAME: testing
                  TENANCY_PASSWORD: testing
                  APP_KEY: deela5kinohw0haekoothahSh8eexach
